/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppsIndexRouteImport } from './routes/apps/index'
import { Route as AppsTodosIndexRouteImport } from './routes/apps/todos/index'
import { Route as AppsTodosCreateRouteImport } from './routes/apps/todos/create'
import { Route as AppsTodosTodoIdEditRouteImport } from './routes/apps/todos/$todoId.edit'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppsIndexRoute = AppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppsTodosIndexRoute = AppsTodosIndexRouteImport.update({
  id: '/apps/todos/',
  path: '/apps/todos/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppsTodosCreateRoute = AppsTodosCreateRouteImport.update({
  id: '/apps/todos/create',
  path: '/apps/todos/create',
  getParentRoute: () => rootRouteImport,
} as any)
const AppsTodosTodoIdEditRoute = AppsTodosTodoIdEditRouteImport.update({
  id: '/apps/todos/$todoId/edit',
  path: '/apps/todos/$todoId/edit',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/apps': typeof AppsIndexRoute
  '/apps/todos/create': typeof AppsTodosCreateRoute
  '/apps/todos': typeof AppsTodosIndexRoute
  '/apps/todos/$todoId/edit': typeof AppsTodosTodoIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/apps': typeof AppsIndexRoute
  '/apps/todos/create': typeof AppsTodosCreateRoute
  '/apps/todos': typeof AppsTodosIndexRoute
  '/apps/todos/$todoId/edit': typeof AppsTodosTodoIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/apps/': typeof AppsIndexRoute
  '/apps/todos/create': typeof AppsTodosCreateRoute
  '/apps/todos/': typeof AppsTodosIndexRoute
  '/apps/todos/$todoId/edit': typeof AppsTodosTodoIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/apps'
    | '/apps/todos/create'
    | '/apps/todos'
    | '/apps/todos/$todoId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/apps'
    | '/apps/todos/create'
    | '/apps/todos'
    | '/apps/todos/$todoId/edit'
  id:
    | '__root__'
    | '/'
    | '/apps/'
    | '/apps/todos/create'
    | '/apps/todos/'
    | '/apps/todos/$todoId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppsIndexRoute: typeof AppsIndexRoute
  AppsTodosCreateRoute: typeof AppsTodosCreateRoute
  AppsTodosIndexRoute: typeof AppsTodosIndexRoute
  AppsTodosTodoIdEditRoute: typeof AppsTodosTodoIdEditRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/apps/': {
      id: '/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AppsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/apps/todos/': {
      id: '/apps/todos/'
      path: '/apps/todos'
      fullPath: '/apps/todos'
      preLoaderRoute: typeof AppsTodosIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/apps/todos/create': {
      id: '/apps/todos/create'
      path: '/apps/todos/create'
      fullPath: '/apps/todos/create'
      preLoaderRoute: typeof AppsTodosCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/apps/todos/$todoId/edit': {
      id: '/apps/todos/$todoId/edit'
      path: '/apps/todos/$todoId/edit'
      fullPath: '/apps/todos/$todoId/edit'
      preLoaderRoute: typeof AppsTodosTodoIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppsIndexRoute: AppsIndexRoute,
  AppsTodosCreateRoute: AppsTodosCreateRoute,
  AppsTodosIndexRoute: AppsTodosIndexRoute,
  AppsTodosTodoIdEditRoute: AppsTodosTodoIdEditRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
